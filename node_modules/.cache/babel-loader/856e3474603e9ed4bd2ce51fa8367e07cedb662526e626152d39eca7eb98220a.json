{"ast":null,"code":"var _jsxFileName = \"/Users/abbylui/Documents/GitHub/aboutme/Portfolio/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ParticleText = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const [mousePos, setMousePos] = useState({\n    x: -9999,\n    y: -9999\n  }); // Initially far off-screen\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n\n    // Set canvas size\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n\n    // Create an offscreen canvas for text rendering\n    const bufferCanvas = document.createElement('canvas');\n    const bufferCtx = bufferCanvas.getContext('2d');\n    bufferCanvas.width = canvas.width;\n    bufferCanvas.height = canvas.height;\n    const particles = [];\n    const numParticles = 5000;\n    const text = \"HCI Explorer of Digital-Physical Experiences\";\n\n    // Step 1: Draw the text on the offscreen buffer canvas\n    bufferCtx.font = '50px Arial';\n    bufferCtx.fillStyle = 'white';\n    bufferCtx.textAlign = 'center';\n    bufferCtx.fillText(text, canvas.width / 2, canvas.height / 2);\n\n    // Calculate bounding box for text\n    const textWidth = bufferCtx.measureText(text).width;\n    const textHeight = 50; // Font size\n\n    // Step 2: Get pixel data of the text from the buffer canvas\n    const imageData = bufferCtx.getImageData(0, 0, canvas.width, canvas.height);\n    const data = imageData.data;\n\n    // Step 3: Map particles to the text pixels and initialize them near their target\n    for (let y = 0; y < canvas.height; y += 4) {\n      for (let x = 0; x < canvas.width; x += 4) {\n        const index = (y * canvas.width + x) * 4;\n        if (data[index + 3] > 150) {\n          // Check if the pixel is opaque\n          const randomOffset = 20; // Control how far the particles start from their final position\n\n          particles.push({\n            // Start near the target position with a small random offset\n            x: x + (Math.random() - 0.5) * randomOffset,\n            y: y + (Math.random() - 0.5) * randomOffset,\n            bx: x,\n            // Base x position (where the text is)\n            by: y,\n            // Base y position (where the text is)\n            vx: 0,\n            vy: 0,\n            radius: 1.5,\n            friction: 0.85,\n            // Friction to reduce velocity over time\n            bounciness: 1.5,\n            // Initial bounciness strength\n            bouncinessDecayFactor: 0.98,\n            // Decay factor for bounciness\n            minBounciness: 0.1 // Minimum bounciness after decay\n          });\n        }\n      }\n    }\n\n    // Mousemove handler to update the mouse position\n    const handleMouseMove = e => {\n      setMousePos({\n        x: e.clientX,\n        y: e.clientY\n      });\n    };\n    window.addEventListener('mousemove', handleMouseMove);\n\n    // Animation loop\n    const render = () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height); // Clear canvas\n\n      // Check if the mouse is near the text bounding box\n      const isMouseNearText = mousePos.x > (canvas.width - textWidth) / 2 - 100 && mousePos.x < (canvas.width + textWidth) / 2 + 100 && mousePos.y > (canvas.height - textHeight) / 2 - 100 && mousePos.y < (canvas.height + textHeight) / 2 + 100;\n      particles.forEach(particle => {\n        const dx = particle.bx - particle.x;\n        const dy = particle.by - particle.y;\n        const distToBase = Math.sqrt(dx * dx + dy * dy);\n\n        // Small hover effect: Apply subtle movement when the mouse is near\n        if (isMouseNearText) {\n          particle.vx += (Math.random() - 0.5) * 0.5; // Subtle random horizontal movement\n          particle.vy += (Math.random() - 0.5) * 0.5; // Subtle random vertical movement\n        }\n\n        // Lerp particles back to their original positions with bounciness\n        const threshold = 5; // Only pull the particle back if it's beyond this threshold from the target\n        if (distToBase > threshold) {\n          particle.vx += dx * 0.05 * particle.bounciness;\n          particle.vy += dy * 0.05 * particle.bounciness;\n        }\n\n        // Update particle position based on its velocity\n        particle.x += particle.vx;\n        particle.y += particle.vy;\n\n        // Apply friction to gradually slow down the particles (damping effect)\n        particle.vx *= particle.friction;\n        particle.vy *= particle.friction;\n\n        // Draw the particle\n        ctx.beginPath();\n        ctx.arc(particle.x, particle.y, particle.radius, 0, Math.PI * 2, false);\n        ctx.fillStyle = 'white';\n        ctx.fill();\n        ctx.closePath();\n      });\n      requestAnimationFrame(render); // Repeat the render process\n    };\n    render(); // Start the animation\n\n    return () => {\n      // Cleanup\n      window.removeEventListener('mousemove', handleMouseMove);\n    };\n  }, [mousePos]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 10\n  }, this);\n};\n_s(ParticleText, \"WqwNWrp0vVyVNAntHrXdN+H6wPg=\");\n_c = ParticleText;\nexport default ParticleText;\nvar _c;\n$RefreshReg$(_c, \"ParticleText\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","ParticleText","_s","canvasRef","mousePos","setMousePos","x","y","canvas","current","ctx","getContext","width","window","innerWidth","height","innerHeight","bufferCanvas","document","createElement","bufferCtx","particles","numParticles","text","font","fillStyle","textAlign","fillText","textWidth","measureText","textHeight","imageData","getImageData","data","index","randomOffset","push","Math","random","bx","by","vx","vy","radius","friction","bounciness","bouncinessDecayFactor","minBounciness","handleMouseMove","e","clientX","clientY","addEventListener","render","clearRect","isMouseNearText","forEach","particle","dx","dy","distToBase","sqrt","threshold","beginPath","arc","PI","fill","closePath","requestAnimationFrame","removeEventListener","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/abbylui/Documents/GitHub/aboutme/Portfolio/src/App.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport './App.css';\n\nconst ParticleText = () => {\n  const canvasRef = useRef(null);\n  const [mousePos, setMousePos] = useState({ x: -9999, y: -9999 }); // Initially far off-screen\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n\n    // Set canvas size\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n\n    // Create an offscreen canvas for text rendering\n    const bufferCanvas = document.createElement('canvas');\n    const bufferCtx = bufferCanvas.getContext('2d');\n    bufferCanvas.width = canvas.width;\n    bufferCanvas.height = canvas.height;\n\n    const particles = [];\n    const numParticles = 5000;\n\n    const text = \"HCI Explorer of Digital-Physical Experiences\";\n\n    // Step 1: Draw the text on the offscreen buffer canvas\n    bufferCtx.font = '50px Arial';\n    bufferCtx.fillStyle = 'white';\n    bufferCtx.textAlign = 'center';\n    bufferCtx.fillText(text, canvas.width / 2, canvas.height / 2);\n\n    // Calculate bounding box for text\n    const textWidth = bufferCtx.measureText(text).width;\n    const textHeight = 50; // Font size\n\n    // Step 2: Get pixel data of the text from the buffer canvas\n    const imageData = bufferCtx.getImageData(0, 0, canvas.width, canvas.height);\n    const data = imageData.data;\n\n    // Step 3: Map particles to the text pixels and initialize them near their target\n    for (let y = 0; y < canvas.height; y += 4) {\n      for (let x = 0; x < canvas.width; x += 4) {\n        const index = (y * canvas.width + x) * 4;\n        if (data[index + 3] > 150) { // Check if the pixel is opaque\n          const randomOffset = 20; // Control how far the particles start from their final position\n\n          particles.push({\n            // Start near the target position with a small random offset\n            x: x + (Math.random() - 0.5) * randomOffset,\n            y: y + (Math.random() - 0.5) * randomOffset,\n            bx: x, // Base x position (where the text is)\n            by: y, // Base y position (where the text is)\n            vx: 0,\n            vy: 0,\n            radius: 1.5,\n            friction: 0.85, // Friction to reduce velocity over time\n            bounciness: 1.5, // Initial bounciness strength\n            bouncinessDecayFactor: 0.98, // Decay factor for bounciness\n            minBounciness: 0.1, // Minimum bounciness after decay\n          });\n        }\n      }\n    }\n\n    // Mousemove handler to update the mouse position\n    const handleMouseMove = (e) => {\n      setMousePos({ x: e.clientX, y: e.clientY });\n    };\n\n    window.addEventListener('mousemove', handleMouseMove);\n\n    // Animation loop\n    const render = () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height); // Clear canvas\n\n      // Check if the mouse is near the text bounding box\n      const isMouseNearText =\n        mousePos.x > (canvas.width - textWidth) / 2 - 100 &&\n        mousePos.x < (canvas.width + textWidth) / 2 + 100 &&\n        mousePos.y > (canvas.height - textHeight) / 2 - 100 &&\n        mousePos.y < (canvas.height + textHeight) / 2 + 100;\n\n      particles.forEach(particle => {\n        const dx = particle.bx - particle.x;\n        const dy = particle.by - particle.y;\n        const distToBase = Math.sqrt(dx * dx + dy * dy);\n\n        // Small hover effect: Apply subtle movement when the mouse is near\n        if (isMouseNearText) {\n          particle.vx += (Math.random() - 0.5) * 0.5; // Subtle random horizontal movement\n          particle.vy += (Math.random() - 0.5) * 0.5; // Subtle random vertical movement\n        }\n\n        // Lerp particles back to their original positions with bounciness\n        const threshold = 5; // Only pull the particle back if it's beyond this threshold from the target\n        if (distToBase > threshold) {\n          particle.vx += dx * 0.05 * particle.bounciness;\n          particle.vy += dy * 0.05 * particle.bounciness;\n        }\n\n        // Update particle position based on its velocity\n        particle.x += particle.vx;\n        particle.y += particle.vy;\n\n        // Apply friction to gradually slow down the particles (damping effect)\n        particle.vx *= particle.friction;\n        particle.vy *= particle.friction;\n\n        // Draw the particle\n        ctx.beginPath();\n        ctx.arc(particle.x, particle.y, particle.radius, 0, Math.PI * 2, false);\n        ctx.fillStyle = 'white';\n        ctx.fill();\n        ctx.closePath();\n      });\n\n      requestAnimationFrame(render); // Repeat the render process\n    };\n\n    render(); // Start the animation\n\n    return () => {\n      // Cleanup\n      window.removeEventListener('mousemove', handleMouseMove);\n    };\n  }, [mousePos]);\n\n  return <canvas ref={canvasRef} />;\n};\n\nexport default ParticleText;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}