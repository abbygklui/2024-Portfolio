{"ast":null,"code":"var _jsxFileName = \"/Users/abbylui/Documents/GitHub/aboutme/Portfolio/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ParticleText = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const mouseRef = useRef({\n    x: 0,\n    y: 0\n  });\n  const mouseRadius = 1000; // Adjust this value to control proximity sensitivity\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n\n    // Set canvas size\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n\n    // Create an offscreen canvas for text rendering\n    const bufferCanvas = document.createElement('canvas');\n    const bufferCtx = bufferCanvas.getContext('2d');\n    bufferCanvas.width = canvas.width;\n    bufferCanvas.height = canvas.height;\n    const particles = [];\n    const numParticles = 5000;\n    const text = \"HCI Explorer of Digital-Physical Experiences\";\n\n    // Step 1: Draw the text on the offscreen buffer canvas\n    bufferCtx.font = '50px Arial';\n    bufferCtx.fillStyle = 'white';\n    bufferCtx.textAlign = 'center';\n    bufferCtx.fillText(text, canvas.width / 2, canvas.height / 2);\n\n    // Step 2: Get pixel data of the text from the buffer canvas\n    const imageData = bufferCtx.getImageData(0, 0, canvas.width, canvas.height);\n    const data = imageData.data;\n\n    // Step 3: Map particles to the text pixels and initialize them near their target\n    for (let y = 0; y < canvas.height; y += 4) {\n      for (let x = 0; x < canvas.width; x += 4) {\n        const index = (y * canvas.width + x) * 4;\n        if (data[index + 3] > 150) {\n          // Check if the pixel is opaque\n          const randomOffset = 20; // Control how far the particles start from their final position\n\n          particles.push({\n            // Start near the target position with a small random offset\n            x: x + (Math.random() - 0.5) * randomOffset,\n            y: y + (Math.random() - 0.5) * randomOffset,\n            bx: x,\n            // Base x position (where the text is)\n            by: y,\n            // Base y position (where the text is)\n            vx: 0,\n            vy: 0,\n            radius: 1.5,\n            friction: 0.85,\n            bounciness: 1.5,\n            bouncinessDecayFactor: 0.98,\n            minBounciness: 0.1\n          });\n        }\n      }\n    }\n\n    // Track the mouse position on the canvas\n    const mouseMoveHandler = event => {\n      const rect = canvas.getBoundingClientRect();\n      mouseRef.current.x = event.clientX - rect.left;\n      mouseRef.current.y = event.clientY - rect.top;\n    };\n\n    // Listen for mouse movement\n    window.addEventListener('mousemove', mouseMoveHandler);\n\n    // Animation loop with mouse interaction\n    const render = () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height); // Clear canvas\n\n      particles.forEach(particle => {\n        // Lerp particles back to their original positions with bounciness\n        const dx = particle.bx - particle.x;\n        const dy = particle.by - particle.y;\n        const distToBase = Math.sqrt(dx * dx + dy * dy);\n        particle.vx += dx * 0.05 * particle.bounciness;\n        particle.vy += dy * 0.05 * particle.bounciness;\n\n        // Check if the particle is close to the mouse and repel it\n        const mouseDx = particle.x - mouseRef.current.x;\n        const mouseDy = particle.y - mouseRef.current.y;\n        const distToMouse = Math.sqrt(mouseDx * mouseDx + mouseDy * mouseDy);\n        if (distToMouse < mouseRadius) {\n          const force = (mouseRadius - distToMouse) / mouseRadius;\n          const angle = Math.atan2(mouseDy, mouseDx);\n          const repulsionStrength = 5; // Controls how strong the repulsion is\n\n          particle.vx += Math.cos(angle) * force * repulsionStrength;\n          particle.vy += Math.sin(angle) * force * repulsionStrength;\n        }\n\n        // Update particle position based on its velocity\n        particle.x += particle.vx;\n        particle.y += particle.vy;\n\n        // Apply friction to gradually slow down the particles\n        particle.vx *= particle.friction;\n        particle.vy *= particle.friction;\n\n        // Draw the particle\n        ctx.beginPath();\n        ctx.arc(particle.x, particle.y, particle.radius, 0, Math.PI * 2, false);\n        ctx.fillStyle = 'white';\n        ctx.fill();\n        ctx.closePath();\n      });\n      requestAnimationFrame(render); // Repeat the render process\n    };\n    render(); // Start the animation\n\n    // Clean up event listener on unmount\n    return () => {\n      window.removeEventListener('mousemove', mouseMoveHandler);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 10\n  }, this);\n};\n_s(ParticleText, \"Qimi1+XRgPM/xwIviNOompZCtaA=\");\n_c = ParticleText;\nexport default ParticleText;\nvar _c;\n$RefreshReg$(_c, \"ParticleText\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","ParticleText","_s","canvasRef","mouseRef","x","y","mouseRadius","canvas","current","ctx","getContext","width","window","innerWidth","height","innerHeight","bufferCanvas","document","createElement","bufferCtx","particles","numParticles","text","font","fillStyle","textAlign","fillText","imageData","getImageData","data","index","randomOffset","push","Math","random","bx","by","vx","vy","radius","friction","bounciness","bouncinessDecayFactor","minBounciness","mouseMoveHandler","event","rect","getBoundingClientRect","clientX","left","clientY","top","addEventListener","render","clearRect","forEach","particle","dx","dy","distToBase","sqrt","mouseDx","mouseDy","distToMouse","force","angle","atan2","repulsionStrength","cos","sin","beginPath","arc","PI","fill","closePath","requestAnimationFrame","removeEventListener","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/abbylui/Documents/GitHub/aboutme/Portfolio/src/App.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport './App.css';\n\nconst ParticleText = () => {\n  const canvasRef = useRef(null);\n  const mouseRef = useRef({ x: 0, y: 0 });\n  const mouseRadius = 1000; // Adjust this value to control proximity sensitivity\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n\n    // Set canvas size\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n\n    // Create an offscreen canvas for text rendering\n    const bufferCanvas = document.createElement('canvas');\n    const bufferCtx = bufferCanvas.getContext('2d');\n    bufferCanvas.width = canvas.width;\n    bufferCanvas.height = canvas.height;\n\n    const particles = [];\n    const numParticles = 5000;\n\n    const text = \"HCI Explorer of Digital-Physical Experiences\";\n\n    // Step 1: Draw the text on the offscreen buffer canvas\n    bufferCtx.font = '50px Arial';\n    bufferCtx.fillStyle = 'white';\n    bufferCtx.textAlign = 'center';\n    bufferCtx.fillText(text, canvas.width / 2, canvas.height / 2);\n\n    // Step 2: Get pixel data of the text from the buffer canvas\n    const imageData = bufferCtx.getImageData(0, 0, canvas.width, canvas.height);\n    const data = imageData.data;\n\n    // Step 3: Map particles to the text pixels and initialize them near their target\n    for (let y = 0; y < canvas.height; y += 4) {\n      for (let x = 0; x < canvas.width; x += 4) {\n        const index = (y * canvas.width + x) * 4;\n        if (data[index + 3] > 150) { // Check if the pixel is opaque\n          const randomOffset = 20; // Control how far the particles start from their final position\n\n          particles.push({\n            // Start near the target position with a small random offset\n            x: x + (Math.random() - 0.5) * randomOffset,\n            y: y + (Math.random() - 0.5) * randomOffset,\n            bx: x, // Base x position (where the text is)\n            by: y, // Base y position (where the text is)\n            vx: 0,\n            vy: 0,\n            radius: 1.5,\n            friction: 0.85,\n            bounciness: 1.5,\n            bouncinessDecayFactor: 0.98,\n            minBounciness: 0.1,\n          });\n        }\n      }\n    }\n\n    // Track the mouse position on the canvas\n    const mouseMoveHandler = (event) => {\n      const rect = canvas.getBoundingClientRect();\n      mouseRef.current.x = event.clientX - rect.left;\n      mouseRef.current.y = event.clientY - rect.top;\n    };\n\n    // Listen for mouse movement\n    window.addEventListener('mousemove', mouseMoveHandler);\n\n    // Animation loop with mouse interaction\n    const render = () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height); // Clear canvas\n\n      particles.forEach(particle => {\n        // Lerp particles back to their original positions with bounciness\n        const dx = particle.bx - particle.x;\n        const dy = particle.by - particle.y;\n        const distToBase = Math.sqrt(dx * dx + dy * dy);\n\n        particle.vx += dx * 0.05 * particle.bounciness;\n        particle.vy += dy * 0.05 * particle.bounciness;\n\n        // Check if the particle is close to the mouse and repel it\n        const mouseDx = particle.x - mouseRef.current.x;\n        const mouseDy = particle.y - mouseRef.current.y;\n        const distToMouse = Math.sqrt(mouseDx * mouseDx + mouseDy * mouseDy);\n\n        if (distToMouse < mouseRadius) {\n          const force = (mouseRadius - distToMouse) / mouseRadius;\n          const angle = Math.atan2(mouseDy, mouseDx);\n          const repulsionStrength = 5; // Controls how strong the repulsion is\n\n          particle.vx += Math.cos(angle) * force * repulsionStrength;\n          particle.vy += Math.sin(angle) * force * repulsionStrength;\n        }\n\n        // Update particle position based on its velocity\n        particle.x += particle.vx;\n        particle.y += particle.vy;\n\n        // Apply friction to gradually slow down the particles\n        particle.vx *= particle.friction;\n        particle.vy *= particle.friction;\n\n        // Draw the particle\n        ctx.beginPath();\n        ctx.arc(particle.x, particle.y, particle.radius, 0, Math.PI * 2, false);\n        ctx.fillStyle = 'white';\n        ctx.fill();\n        ctx.closePath();\n      });\n\n      requestAnimationFrame(render); // Repeat the render process\n    };\n\n    render(); // Start the animation\n\n    // Clean up event listener on unmount\n    return () => {\n      window.removeEventListener('mousemove', mouseMoveHandler);\n    };\n  }, []);\n\n  return <canvas ref={canvasRef} />;\n};\n\nexport default ParticleText;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}