{"ast":null,"code":"var _jsxFileName = \"/Users/abbylui/Documents/GitHub/aboutme/Portfolio/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ParticleText = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const [mousePos, setMousePos] = useState({\n    x: 0,\n    y: 0\n  });\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n\n    // Set canvas size\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n\n    // Create an offscreen canvas for text rendering\n    const bufferCanvas = document.createElement('canvas');\n    const bufferCtx = bufferCanvas.getContext('2d');\n    bufferCanvas.width = canvas.width;\n    bufferCanvas.height = canvas.height;\n    const particles = [];\n    const numParticles = 15000; // Adjust the number of particles for better effect\n\n    const text = \"HCI Explorer of Digital-Physical Experiences\";\n\n    // Step 1: Draw the text on the offscreen buffer canvas\n    bufferCtx.font = '50px Arial';\n    bufferCtx.fillStyle = 'white';\n    bufferCtx.textAlign = 'center';\n    bufferCtx.fillText(text, canvas.width / 2, canvas.height / 2);\n\n    // Step 2: Get pixel data of the text from the buffer canvas\n    const imageData = bufferCtx.getImageData(0, 0, canvas.width, canvas.height);\n    const data = imageData.data;\n\n    // Step 3: Map particles to the text pixels and initialize them near their target\n    for (let y = 0; y < canvas.height; y += 4) {\n      for (let x = 0; x < canvas.width; x += 4) {\n        const index = (y * canvas.width + x) * 4;\n        if (data[index + 3] > 150) {\n          // Check if the pixel is opaque\n          const randomOffset = 20; // Control how far the particles start from their final position\n\n          particles.push({\n            // Start near the target position with a small random offset\n            x: x + (Math.random() - 0.5) * randomOffset,\n            y: y + (Math.random() - 0.5) * randomOffset,\n            bx: x,\n            // Base x position (where the text is)\n            by: y,\n            // Base y position (where the text is)\n            vx: 0,\n            vy: 0,\n            radius: 1.5,\n            friction: 0.8,\n            // Friction to reduce velocity over time\n            bounciness: 2 // Controls the strength of the bounce effect\n          });\n        }\n      }\n    }\n\n    // Mousemove handler to update the mouse position\n    const handleMouseMove = e => {\n      setMousePos({\n        x: e.clientX,\n        y: e.clientY\n      });\n    };\n    window.addEventListener('mousemove', handleMouseMove);\n\n    // Animation loop\n    const render = () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height); // Clear canvas\n\n      particles.forEach(particle => {\n        const distX = particle.x - mousePos.x;\n        const distY = particle.y - mousePos.y;\n        const distance = Math.sqrt(distX * distX + distY * distY);\n\n        // Repel particles from mouse if they are close\n        if (distance < 100) {\n          const forceDirectionX = distX / distance;\n          const forceDirectionY = distY / distance;\n          const maxDistance = 100;\n          const force = (maxDistance - distance) / maxDistance; // The closer the particle, the stronger the force\n          const directionX = forceDirectionX * force * 4;\n          const directionY = forceDirectionY * force * 4;\n          particle.vx += directionX;\n          particle.vy += directionY;\n        }\n\n        // Lerp particles back to their original positions with bounciness\n        const dx = particle.bx - particle.x;\n        const dy = particle.by - particle.y;\n\n        // Apply a stronger pull toward the target and allow overshooting\n        particle.vx += dx * 1.3 * particle.bounciness;\n        particle.vy += dy * 1.3 * particle.bounciness;\n\n        // Update particle position\n        particle.x += particle.vx;\n        particle.y += particle.vy;\n\n        // Apply friction to gradually slow down the particles (damping effect)\n        particle.vx *= particle.friction;\n        particle.vy *= particle.friction;\n\n        // Draw the particle\n        ctx.beginPath();\n        ctx.arc(particle.x, particle.y, particle.radius, 0, Math.PI * 2, false);\n        ctx.fillStyle = 'white';\n        ctx.fill();\n        ctx.closePath();\n      });\n      requestAnimationFrame(render); // Repeat the render process\n    };\n    render(); // Start the animation\n\n    return () => {\n      // Cleanup\n      window.removeEventListener('mousemove', handleMouseMove);\n    };\n  }, [mousePos]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 10\n  }, this);\n};\n_s(ParticleText, \"/3Pd71VRVjsvcwNG3f/DmTBq+fc=\");\n_c = ParticleText;\nexport default ParticleText;\nvar _c;\n$RefreshReg$(_c, \"ParticleText\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","ParticleText","_s","canvasRef","mousePos","setMousePos","x","y","canvas","current","ctx","getContext","width","window","innerWidth","height","innerHeight","bufferCanvas","document","createElement","bufferCtx","particles","numParticles","text","font","fillStyle","textAlign","fillText","imageData","getImageData","data","index","randomOffset","push","Math","random","bx","by","vx","vy","radius","friction","bounciness","handleMouseMove","e","clientX","clientY","addEventListener","render","clearRect","forEach","particle","distX","distY","distance","sqrt","forceDirectionX","forceDirectionY","maxDistance","force","directionX","directionY","dx","dy","beginPath","arc","PI","fill","closePath","requestAnimationFrame","removeEventListener","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/abbylui/Documents/GitHub/aboutme/Portfolio/src/App.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport './App.css';\n\nconst ParticleText = () => {\n  const canvasRef = useRef(null);\n  const [mousePos, setMousePos] = useState({ x: 0, y: 0 });\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n\n    // Set canvas size\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n\n    // Create an offscreen canvas for text rendering\n    const bufferCanvas = document.createElement('canvas');\n    const bufferCtx = bufferCanvas.getContext('2d');\n    bufferCanvas.width = canvas.width;\n    bufferCanvas.height = canvas.height;\n\n    const particles = [];\n    const numParticles = 15000; // Adjust the number of particles for better effect\n\n    const text = \"HCI Explorer of Digital-Physical Experiences\";\n\n    // Step 1: Draw the text on the offscreen buffer canvas\n    bufferCtx.font = '50px Arial';\n    bufferCtx.fillStyle = 'white';\n    bufferCtx.textAlign = 'center';\n    bufferCtx.fillText(text, canvas.width / 2, canvas.height / 2);\n\n    // Step 2: Get pixel data of the text from the buffer canvas\n    const imageData = bufferCtx.getImageData(0, 0, canvas.width, canvas.height);\n    const data = imageData.data;\n\n    // Step 3: Map particles to the text pixels and initialize them near their target\n    for (let y = 0; y < canvas.height; y += 4) {\n      for (let x = 0; x < canvas.width; x += 4) {\n        const index = (y * canvas.width + x) * 4;\n        if (data[index + 3] > 150) { // Check if the pixel is opaque\n          const randomOffset = 20; // Control how far the particles start from their final position\n\n          particles.push({\n            // Start near the target position with a small random offset\n            x: x + (Math.random() - 0.5) * randomOffset,\n            y: y + (Math.random() - 0.5) * randomOffset,\n            bx: x, // Base x position (where the text is)\n            by: y, // Base y position (where the text is)\n            vx: 0,\n            vy: 0,\n            radius: 1.5,\n            friction: 0.8, // Friction to reduce velocity over time\n            bounciness: 2, // Controls the strength of the bounce effect\n          });\n        }\n      }\n    }\n\n    // Mousemove handler to update the mouse position\n    const handleMouseMove = (e) => {\n      setMousePos({ x: e.clientX, y: e.clientY });\n    };\n\n    window.addEventListener('mousemove', handleMouseMove);\n\n    // Animation loop\n    const render = () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height); // Clear canvas\n\n      particles.forEach(particle => {\n        const distX = particle.x - mousePos.x;\n        const distY = particle.y - mousePos.y;\n        const distance = Math.sqrt(distX * distX + distY * distY);\n\n        // Repel particles from mouse if they are close\n        if (distance < 100) {\n          const forceDirectionX = distX / distance;\n          const forceDirectionY = distY / distance;\n          const maxDistance = 100;\n          const force = (maxDistance - distance) / maxDistance; // The closer the particle, the stronger the force\n          const directionX = forceDirectionX * force * 4;\n          const directionY = forceDirectionY * force * 4;\n\n          particle.vx += directionX;\n          particle.vy += directionY;\n        }\n\n        // Lerp particles back to their original positions with bounciness\n        const dx = particle.bx - particle.x;\n        const dy = particle.by - particle.y;\n\n        // Apply a stronger pull toward the target and allow overshooting\n        particle.vx += dx * 1.3 * particle.bounciness;\n        particle.vy += dy * 1.3 * particle.bounciness;\n\n        // Update particle position\n        particle.x += particle.vx;\n        particle.y += particle.vy;\n\n        // Apply friction to gradually slow down the particles (damping effect)\n        particle.vx *= particle.friction;\n        particle.vy *= particle.friction;\n\n        // Draw the particle\n        ctx.beginPath();\n        ctx.arc(particle.x, particle.y, particle.radius, 0, Math.PI * 2, false);\n        ctx.fillStyle = 'white';\n        ctx.fill();\n        ctx.closePath();\n      });\n\n      requestAnimationFrame(render); // Repeat the render process\n    };\n\n    render(); // Start the animation\n\n    return () => {\n      // Cleanup\n      window.removeEventListener('mousemove', handleMouseMove);\n    };\n  }, [mousePos]);\n\n  return <canvas ref={canvasRef} />;\n};\n\nexport default ParticleText;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}