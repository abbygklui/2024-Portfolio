{"ast":null,"code":"var _jsxFileName = \"/Users/abbylui/Documents/GitHub/aboutme/idleUI/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport { FontLoader } from 'three/examples/jsm/loaders/FontLoader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const mountRef = useRef(null);\n  useEffect(() => {\n    /*** Setup Scene, Camera, and Renderer ***/\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true,\n      alpha: true\n    });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.setPixelRatio(window.devicePixelRatio);\n    mountRef.current.appendChild(renderer.domElement);\n\n    /*** Shaders ***/\n    const vertexShader = `\n            uniform vec3 lightPosition;\n            varying float vDist;\n        \n            void main() {\n                vec3 transformedPosition = (modelViewMatrix * vec4(position, 1.0)).xyz;\n        \n                // Calculate the distance from the light source to the vertex\n                float dist = distance(lightPosition, transformedPosition);\n                vDist = dist;\n        \n                // Apply a warp based on distance\n                vec3 direction = normalize(lightPosition - transformedPosition);\n                vec3 offset = direction * (1.0 / (dist + 0.1)) * 1.2; // Warp effect\n                transformedPosition += offset;\n        \n                gl_Position = projectionMatrix * vec4(transformedPosition, 1.0);\n            }\n        `;\n    const fragmentShader = `\n            varying float vDist;\n            uniform vec3 lightColor;\n        \n            void main() {\n                // Calculate intensity based on distance\n                float intensity = 1.0 / (vDist * vDist + 0.1);\n                intensity = intensity * 40.0;\n                intensity = clamp(intensity, 0.0, 1.0);\n        \n                // Apply the light color and intensity to the output color\n                vec3 color = lightColor * intensity;\n        \n                gl_FragColor = vec4(color, 1.0);\n            }\n        `;\n\n    /*** Create Light ***/\n    const pointLight = new THREE.PointLight(0xff0000, 2, 100);\n    pointLight.decay = 2;\n    scene.add(pointLight);\n\n    /*** Shader Uniforms ***/\n    const uniforms = {\n      lightPosition: {\n        value: new THREE.Vector3(0, 0, 0)\n      },\n      lightColor: {\n        value: new THREE.Color(0xff0000)\n      }\n    };\n\n    /*** Load Font and Create Text ***/\n    const loader = new FontLoader();\n    loader.load('https://threejs.org/examples/fonts/helvetiker_regular.typeface.json', font => {\n      const textGeometry = new THREE.TextGeometry('HCI Explorer of digital-physical experiences', {\n        font: font,\n        size: 0.5,\n        height: 0.05,\n        curveSegments: 12,\n        bevelEnabled: true,\n        bevelThickness: 0.02,\n        bevelSize: 0.02,\n        bevelOffset: 0,\n        bevelSegments: 5\n      });\n      textGeometry.computeBoundingBox();\n      const textWidth = textGeometry.boundingBox.max.x - textGeometry.boundingBox.min.x;\n      const textMaterial = new THREE.ShaderMaterial({\n        vertexShader,\n        fragmentShader,\n        uniforms,\n        transparent: true\n      });\n      const textMesh = new THREE.Mesh(textGeometry, textMaterial);\n      textMesh.position.set(-textWidth / 2, 0, 0);\n      scene.add(textMesh);\n    }, undefined, error => {\n      console.error('An error happened while loading the font:', error);\n    });\n\n    /*** Camera Position ***/\n    camera.position.z = 5;\n\n    /*** Mouse Movement ***/\n    const mouse = new THREE.Vector2(0, 0);\n    const onMouseMove = event => {\n      mouse.x = event.clientX / window.innerWidth * 2 - 1;\n      mouse.y = -(event.clientY / window.innerHeight) * 2 + 1;\n    };\n    window.addEventListener('mousemove', onMouseMove);\n\n    /*** Handle Window Resize ***/\n    const onWindowResize = () => {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    };\n    window.addEventListener('resize', onWindowResize);\n\n    /*** Animation Loop ***/\n    const animate = () => {\n      requestAnimationFrame(animate);\n\n      // Update light position based on mouse\n      const vector = new THREE.Vector3(mouse.x, mouse.y, 0.5);\n      vector.unproject(camera);\n      const dir = vector.sub(camera.position).normalize();\n      const distance = -camera.position.z / dir.z;\n      const pos = camera.position.clone().add(dir.multiplyScalar(distance));\n      pos.z += 1;\n      pointLight.position.copy(pos);\n      uniforms.lightPosition.value.copy(pos);\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    /*** Cleanup on Unmount ***/\n    return () => {\n      window.removeEventListener('mousemove', onMouseMove);\n      window.removeEventListener('resize', onWindowResize);\n      mountRef.current.removeChild(renderer.domElement);\n      renderer.dispose();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mountRef,\n    style: {\n      width: '100vw',\n      height: '100vh'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 10\n  }, this);\n}\n_s(App, \"V9/qkEdV8GfsDZk7lMTA1T8g5Ps=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useRef","THREE","FontLoader","jsxDEV","_jsxDEV","App","_s","mountRef","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","renderer","WebGLRenderer","antialias","alpha","setSize","setPixelRatio","devicePixelRatio","current","appendChild","domElement","vertexShader","fragmentShader","pointLight","PointLight","decay","add","uniforms","lightPosition","value","Vector3","lightColor","Color","loader","load","font","textGeometry","TextGeometry","size","height","curveSegments","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","computeBoundingBox","textWidth","boundingBox","max","x","min","textMaterial","ShaderMaterial","transparent","textMesh","Mesh","position","set","undefined","error","console","z","mouse","Vector2","onMouseMove","event","clientX","y","clientY","addEventListener","onWindowResize","aspect","updateProjectionMatrix","animate","requestAnimationFrame","vector","unproject","dir","sub","normalize","distance","pos","clone","multiplyScalar","copy","render","removeEventListener","removeChild","dispose","ref","style","width","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/abbylui/Documents/GitHub/aboutme/idleUI/src/App.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport { FontLoader } from 'three/examples/jsm/loaders/FontLoader';\n\nfunction App() {\n  const mountRef = useRef(null);\n\n  useEffect(() => {\n    /*** Setup Scene, Camera, and Renderer ***/\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(\n      75,\n      window.innerWidth / window.innerHeight,\n      0.1,\n      1000\n    );\n    const renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.setPixelRatio(window.devicePixelRatio);\n    mountRef.current.appendChild(renderer.domElement);\n\n    /*** Shaders ***/\n    const vertexShader = `\n            uniform vec3 lightPosition;\n            varying float vDist;\n        \n            void main() {\n                vec3 transformedPosition = (modelViewMatrix * vec4(position, 1.0)).xyz;\n        \n                // Calculate the distance from the light source to the vertex\n                float dist = distance(lightPosition, transformedPosition);\n                vDist = dist;\n        \n                // Apply a warp based on distance\n                vec3 direction = normalize(lightPosition - transformedPosition);\n                vec3 offset = direction * (1.0 / (dist + 0.1)) * 1.2; // Warp effect\n                transformedPosition += offset;\n        \n                gl_Position = projectionMatrix * vec4(transformedPosition, 1.0);\n            }\n        `;\n\n    const fragmentShader = `\n            varying float vDist;\n            uniform vec3 lightColor;\n        \n            void main() {\n                // Calculate intensity based on distance\n                float intensity = 1.0 / (vDist * vDist + 0.1);\n                intensity = intensity * 40.0;\n                intensity = clamp(intensity, 0.0, 1.0);\n        \n                // Apply the light color and intensity to the output color\n                vec3 color = lightColor * intensity;\n        \n                gl_FragColor = vec4(color, 1.0);\n            }\n        `;\n\n    /*** Create Light ***/\n    const pointLight = new THREE.PointLight(0xff0000, 2, 100);\n    pointLight.decay = 2;\n    scene.add(pointLight);\n\n    /*** Shader Uniforms ***/\n    const uniforms = {\n      lightPosition: { value: new THREE.Vector3(0, 0, 0) },\n      lightColor: { value: new THREE.Color(0xff0000) },\n    };\n\n    /*** Load Font and Create Text ***/\n    const loader = new FontLoader();\n    loader.load(\n      'https://threejs.org/examples/fonts/helvetiker_regular.typeface.json',\n      (font) => {\n        const textGeometry = new THREE.TextGeometry(\n          'HCI Explorer of digital-physical experiences',\n          {\n            font: font,\n            size: 0.5,\n            height: 0.05,\n            curveSegments: 12,\n            bevelEnabled: true,\n            bevelThickness: 0.02,\n            bevelSize: 0.02,\n            bevelOffset: 0,\n            bevelSegments: 5,\n          }\n        );\n\n        textGeometry.computeBoundingBox();\n        const textWidth =\n          textGeometry.boundingBox.max.x - textGeometry.boundingBox.min.x;\n\n        const textMaterial = new THREE.ShaderMaterial({\n          vertexShader,\n          fragmentShader,\n          uniforms,\n          transparent: true,\n        });\n\n        const textMesh = new THREE.Mesh(textGeometry, textMaterial);\n        textMesh.position.set(-textWidth / 2, 0, 0);\n        scene.add(textMesh);\n      },\n      undefined,\n      (error) => {\n        console.error('An error happened while loading the font:', error);\n      }\n    );\n\n    /*** Camera Position ***/\n    camera.position.z = 5;\n\n    /*** Mouse Movement ***/\n    const mouse = new THREE.Vector2(0, 0);\n\n    const onMouseMove = (event) => {\n      mouse.x = (event.clientX / window.innerWidth) * 2 - 1;\n      mouse.y = -(event.clientY / window.innerHeight) * 2 + 1;\n    };\n\n    window.addEventListener('mousemove', onMouseMove);\n\n    /*** Handle Window Resize ***/\n    const onWindowResize = () => {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    };\n\n    window.addEventListener('resize', onWindowResize);\n\n    /*** Animation Loop ***/\n    const animate = () => {\n      requestAnimationFrame(animate);\n\n      // Update light position based on mouse\n      const vector = new THREE.Vector3(mouse.x, mouse.y, 0.5);\n      vector.unproject(camera);\n      const dir = vector.sub(camera.position).normalize();\n      const distance = -camera.position.z / dir.z;\n      const pos = camera.position.clone().add(dir.multiplyScalar(distance));\n      pos.z += 1;\n      pointLight.position.copy(pos);\n\n      uniforms.lightPosition.value.copy(pos);\n\n      renderer.render(scene, camera);\n    };\n\n    animate();\n\n    /*** Cleanup on Unmount ***/\n    return () => {\n      window.removeEventListener('mousemove', onMouseMove);\n      window.removeEventListener('resize', onWindowResize);\n      mountRef.current.removeChild(renderer.domElement);\n      renderer.dispose();\n    };\n  }, []);\n\n  return <div ref={mountRef} style={{ width: '100vw', height: '100vh' }} />;\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}