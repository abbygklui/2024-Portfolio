{"ast":null,"code":"var _jsxFileName = \"/Users/abbylui/Documents/GitHub/2024-Portfolio/src/components/About.js\";\nimport React, { useEffect, useRef } from 'react';\n// import * as d3 from 'd3';\n// import { Container, Row, Col } from 'react-bootstrap';\n// import './About.css';  // Import custom styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction About() {\n  // const svgRef = useRef(null);\n\n  // useEffect(() => {\n  //     const svg = d3.select(svgRef.current);\n  //     const width = window.innerWidth / 2; // Adjust width for the graph (half of the screen)\n  //     const height = window.innerHeight;\n\n  //     // Clear the SVG before drawing\n  //     svg.selectAll('*').remove();\n\n  //     svg.attr(\"viewBox\", `0 0 ${width} ${height}`)\n  //         .attr(\"preserveAspectRatio\", \"xMidYMid meet\");\n\n  //     const nodes = [\n  //         { id: 1, label: \"Studied at the OCAD University\" },\n  //         { id: 2, label: \"Worked as a Conversation and UX Designer at RBC\" },\n  //         { id: 3, label: \"Worked as a UX Designer at Nokia\" },\n  //         { id: 4, label: \"Studied abroad at the Hong Kong Polytechnic University\" },\n  //         { id: 5, label: \"Working as an Interaction Designer/Researcher at Huawei R&D labs\" },\n  //         { id: 6, label: \"Worked as a Designer at Jack/Cover Health\" },\n  //         { id: 7, label: \"Co-redesigned the Pang Jai Fabric Market\" },\n  //         // { id: 8, label: \"Read Speculative Design\" },\n  //         // { id: 9, label: \"Category winner at several hackathons\" },\n  //         // { id: 14, label: \"Winner of the 2021 ADA mentorship program\" },\n  //         { id: 10, label: \"Started HCI coding projects\" },\n  //         { id: 11, label: \"Co-founded the UX Student Association\" },\n  //         { id: 12, label: \"Founded the OCADU Undergraduate Research Association\" },\n  //         // { id: 13, label: \"Read Design Justice and 99% Invisible Cities\" },\n  //         { id: 15, label: \"Human-centred design\" },\n  //         { id: 16, label: \"Research\" },\n  //         { id: 17, label: \"Co-Design\" },\n  //         { id: 18, label: \"Speculative Innovation\" }\n  //     ];\n\n  //     const links = [\n  //         { source: 1, target: 2 },\n  //         { source: 2, target: 3 },\n  //         { source: 3, target: 4 },\n  //         { source: 4, target: 5 },\n  //         { source: 1, target: 6 },\n  //         { source: 4, target: 7 },\n  //         // { source: 1, target: 8 },\n  //         // { source: 1, target: 9 },\n  //         { source: 1, target: 10 },\n  //         { source: 1, target: 11 },\n  //         { source: 1, target: 12 },\n  //         // { source: 7, target: 13 },\n  //         // { source: 9, target: 14 },\n  //         // { source: 1, target: 9 },\n  //         { source: 15, target: 1 },\n  //         { source: 15, target: 2 },\n  //         { source: 15, target: 3 },\n  //         { source: 15, target: 5 },\n  //         { source: 15, target: 7 },\n  //         { source: 15, target: 11 },\n  //         { source: 16, target: 5 },\n  //         { source: 16, target: 2 },\n  //         { source: 16, target: 12 },\n  //         // { source: 17, target: 13 },\n  //         { source: 17, target: 7 },\n  //         // { source: 18, target: 8 },\n  //         { source: 18, target: 5 },\n  //         { source: 18, target: 10 }\n  //     ];\n\n  //     // Main force simulation for nodes and links\n  //     const simulation = d3.forceSimulation(nodes)\n  //         .force(\"link\", d3.forceLink(links).id(d => d.id).distance(10))  // Spread out linked nodes\n  //         .force(\"charge\", d3.forceManyBody().strength(-100))  // Strong repulsion to scatter nodes\n  //         .force(\"center\", d3.forceCenter(width / 2, height / 2))\n  //         .force(\"collision\", d3.forceCollide().radius(90))  // Avoid node overlap\n  //         .on(\"tick\", ticked);\n\n  //     // Create link elements\n  //     const link = svg.append(\"g\")\n  //         .attr(\"class\", \"links\")\n  //         .selectAll(\"line\")\n  //         .data(links)\n  //         .enter().append(\"line\")\n  //         .attr(\"class\", \"link\");\n\n  //     // Create node elements\n  //     const node = svg.append(\"g\")\n  //         .attr(\"class\", \"nodes\")\n  //         .selectAll(\"circle\")\n  //         .data(nodes)\n  //         .enter().append(\"circle\")\n  //         .attr(\"class\", \"node\")\n  //         .attr(\"r\", 5)\n  //         .call(d3.drag()\n  //             .on(\"start\", dragStarted)\n  //             .on(\"drag\", dragged)\n  //             .on(\"end\", dragEnded))\n  //         .on(\"mouseover\", function (event, d) {\n  //             simulation.alphaTarget(0.3).restart();\n  //             d.fx = d.x - (Math.random() * 10 - 5);  // Slight random move on hover\n  //             d.fy = d.y - (Math.random() * 10 - 5);\n  //         })\n  //         .on(\"mouseout\", function (event, d) {\n  //             simulation.alphaTarget(0);\n  //             d.fx = null;\n  //             d.fy = null;\n  //         });\n\n  //     // Create text labels\n  //     const label = svg.append(\"g\")\n  //         .attr(\"class\", \"labels\")\n  //         .selectAll(\"text\")\n  //         .data(nodes)\n  //         .enter().append(\"text\")\n  //         .attr(\"class\", d => [15, 16, 17, 18].includes(d.id) ? \"label header-label\" : \"label\")\n  //         .attr(\"dx\", 12)\n  //         .attr(\"dy\", \".35em\")\n  //         .text(d => d.label);\n\n  //     // Separate simulation for labels to prevent overlap\n  //     const labelForce = d3.forceSimulation(nodes)\n  //         .force(\"labelCollision\", d3.forceCollide().radius(30))  // Prevent label overlap\n  //         .on(\"tick\", () => {\n  //             label\n  //                 .attr(\"x\", d => d.x)\n  //                 .attr(\"y\", d => d.y);\n  //         });\n\n  //     // Function to update positions on each tick of the simulation\n  //     function ticked() {\n  //         const padding = 10;  // Adjust this value to increase or decrease padding\n\n  //         link\n  //             .attr(\"x1\", d => d.source.x)\n  //             .attr(\"y1\", d => d.source.y)\n  //             .attr(\"x2\", d => d.target.x)\n  //             .attr(\"y2\", d => d.target.y);\n\n  //         node\n  //             .attr(\"cx\", d => d.x = Math.max(padding, Math.min(d.x, width - padding)))  // Clamp x position with padding\n  //             .attr(\"cy\", d => d.y = Math.max(padding, Math.min(d.y, height - padding))); // Clamp y position with padding\n\n  //         label\n  //             .attr(\"x\", d => d.x)\n  //             .attr(\"y\", d => d.y);\n  //     }\n\n  //     // Drag functions to allow nodes to be dragged\n  //     function dragStarted(event, d) {\n  //         if (!event.active) simulation.alphaTarget(0.3).restart();\n  //         d.fx = d.x;\n  //         d.fy = d.y;\n  //     }\n\n  //     function dragged(event, d) {\n  //         d.fx = Math.max(0, Math.min(event.x, width));  // Clamp x position\n  //         d.fy = Math.max(0, Math.min(event.y, height));  // Clamp y position\n  //     }\n\n  //     function dragEnded(event, d) {\n  //         if (!event.active) simulation.alphaTarget(0);\n  //         d.fx = null;\n  //         d.fy = null;\n  //     }\n\n  // }, []);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"background\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 9\n  }, this);\n}\n_c = About;\nexport default About;\nvar _c;\n$RefreshReg$(_c, \"About\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","About","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/abbylui/Documents/GitHub/2024-Portfolio/src/components/About.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\n// import * as d3 from 'd3';\n// import { Container, Row, Col } from 'react-bootstrap';\n// import './About.css';  // Import custom styles\n\nfunction About() {\n    // const svgRef = useRef(null);\n\n    // useEffect(() => {\n    //     const svg = d3.select(svgRef.current);\n    //     const width = window.innerWidth / 2; // Adjust width for the graph (half of the screen)\n    //     const height = window.innerHeight;\n\n    //     // Clear the SVG before drawing\n    //     svg.selectAll('*').remove();\n\n    //     svg.attr(\"viewBox\", `0 0 ${width} ${height}`)\n    //         .attr(\"preserveAspectRatio\", \"xMidYMid meet\");\n\n    //     const nodes = [\n    //         { id: 1, label: \"Studied at the OCAD University\" },\n    //         { id: 2, label: \"Worked as a Conversation and UX Designer at RBC\" },\n    //         { id: 3, label: \"Worked as a UX Designer at Nokia\" },\n    //         { id: 4, label: \"Studied abroad at the Hong Kong Polytechnic University\" },\n    //         { id: 5, label: \"Working as an Interaction Designer/Researcher at Huawei R&D labs\" },\n    //         { id: 6, label: \"Worked as a Designer at Jack/Cover Health\" },\n    //         { id: 7, label: \"Co-redesigned the Pang Jai Fabric Market\" },\n    //         // { id: 8, label: \"Read Speculative Design\" },\n    //         // { id: 9, label: \"Category winner at several hackathons\" },\n    //         // { id: 14, label: \"Winner of the 2021 ADA mentorship program\" },\n    //         { id: 10, label: \"Started HCI coding projects\" },\n    //         { id: 11, label: \"Co-founded the UX Student Association\" },\n    //         { id: 12, label: \"Founded the OCADU Undergraduate Research Association\" },\n    //         // { id: 13, label: \"Read Design Justice and 99% Invisible Cities\" },\n    //         { id: 15, label: \"Human-centred design\" },\n    //         { id: 16, label: \"Research\" },\n    //         { id: 17, label: \"Co-Design\" },\n    //         { id: 18, label: \"Speculative Innovation\" }\n    //     ];\n\n    //     const links = [\n    //         { source: 1, target: 2 },\n    //         { source: 2, target: 3 },\n    //         { source: 3, target: 4 },\n    //         { source: 4, target: 5 },\n    //         { source: 1, target: 6 },\n    //         { source: 4, target: 7 },\n    //         // { source: 1, target: 8 },\n    //         // { source: 1, target: 9 },\n    //         { source: 1, target: 10 },\n    //         { source: 1, target: 11 },\n    //         { source: 1, target: 12 },\n    //         // { source: 7, target: 13 },\n    //         // { source: 9, target: 14 },\n    //         // { source: 1, target: 9 },\n    //         { source: 15, target: 1 },\n    //         { source: 15, target: 2 },\n    //         { source: 15, target: 3 },\n    //         { source: 15, target: 5 },\n    //         { source: 15, target: 7 },\n    //         { source: 15, target: 11 },\n    //         { source: 16, target: 5 },\n    //         { source: 16, target: 2 },\n    //         { source: 16, target: 12 },\n    //         // { source: 17, target: 13 },\n    //         { source: 17, target: 7 },\n    //         // { source: 18, target: 8 },\n    //         { source: 18, target: 5 },\n    //         { source: 18, target: 10 }\n    //     ];\n\n    //     // Main force simulation for nodes and links\n    //     const simulation = d3.forceSimulation(nodes)\n    //         .force(\"link\", d3.forceLink(links).id(d => d.id).distance(10))  // Spread out linked nodes\n    //         .force(\"charge\", d3.forceManyBody().strength(-100))  // Strong repulsion to scatter nodes\n    //         .force(\"center\", d3.forceCenter(width / 2, height / 2))\n    //         .force(\"collision\", d3.forceCollide().radius(90))  // Avoid node overlap\n    //         .on(\"tick\", ticked);\n\n    //     // Create link elements\n    //     const link = svg.append(\"g\")\n    //         .attr(\"class\", \"links\")\n    //         .selectAll(\"line\")\n    //         .data(links)\n    //         .enter().append(\"line\")\n    //         .attr(\"class\", \"link\");\n\n    //     // Create node elements\n    //     const node = svg.append(\"g\")\n    //         .attr(\"class\", \"nodes\")\n    //         .selectAll(\"circle\")\n    //         .data(nodes)\n    //         .enter().append(\"circle\")\n    //         .attr(\"class\", \"node\")\n    //         .attr(\"r\", 5)\n    //         .call(d3.drag()\n    //             .on(\"start\", dragStarted)\n    //             .on(\"drag\", dragged)\n    //             .on(\"end\", dragEnded))\n    //         .on(\"mouseover\", function (event, d) {\n    //             simulation.alphaTarget(0.3).restart();\n    //             d.fx = d.x - (Math.random() * 10 - 5);  // Slight random move on hover\n    //             d.fy = d.y - (Math.random() * 10 - 5);\n    //         })\n    //         .on(\"mouseout\", function (event, d) {\n    //             simulation.alphaTarget(0);\n    //             d.fx = null;\n    //             d.fy = null;\n    //         });\n\n    //     // Create text labels\n    //     const label = svg.append(\"g\")\n    //         .attr(\"class\", \"labels\")\n    //         .selectAll(\"text\")\n    //         .data(nodes)\n    //         .enter().append(\"text\")\n    //         .attr(\"class\", d => [15, 16, 17, 18].includes(d.id) ? \"label header-label\" : \"label\")\n    //         .attr(\"dx\", 12)\n    //         .attr(\"dy\", \".35em\")\n    //         .text(d => d.label);\n\n    //     // Separate simulation for labels to prevent overlap\n    //     const labelForce = d3.forceSimulation(nodes)\n    //         .force(\"labelCollision\", d3.forceCollide().radius(30))  // Prevent label overlap\n    //         .on(\"tick\", () => {\n    //             label\n    //                 .attr(\"x\", d => d.x)\n    //                 .attr(\"y\", d => d.y);\n    //         });\n\n    //     // Function to update positions on each tick of the simulation\n    //     function ticked() {\n    //         const padding = 10;  // Adjust this value to increase or decrease padding\n\n    //         link\n    //             .attr(\"x1\", d => d.source.x)\n    //             .attr(\"y1\", d => d.source.y)\n    //             .attr(\"x2\", d => d.target.x)\n    //             .attr(\"y2\", d => d.target.y);\n\n    //         node\n    //             .attr(\"cx\", d => d.x = Math.max(padding, Math.min(d.x, width - padding)))  // Clamp x position with padding\n    //             .attr(\"cy\", d => d.y = Math.max(padding, Math.min(d.y, height - padding))); // Clamp y position with padding\n\n    //         label\n    //             .attr(\"x\", d => d.x)\n    //             .attr(\"y\", d => d.y);\n    //     }\n\n    //     // Drag functions to allow nodes to be dragged\n    //     function dragStarted(event, d) {\n    //         if (!event.active) simulation.alphaTarget(0.3).restart();\n    //         d.fx = d.x;\n    //         d.fy = d.y;\n    //     }\n\n    //     function dragged(event, d) {\n    //         d.fx = Math.max(0, Math.min(event.x, width));  // Clamp x position\n    //         d.fy = Math.max(0, Math.min(event.y, height));  // Clamp y position\n    //     }\n\n\n    //     function dragEnded(event, d) {\n    //         if (!event.active) simulation.alphaTarget(0);\n    //         d.fx = null;\n    //         d.fy = null;\n    //     }\n\n    // }, []);\n\n    return (\n        <div className='background'>\n            {/* <Container className=\"about-container\" >\n                <Row >\n                    <Col md={4} className=\"d-flex flex-column align-items-start\" style={{ padding: '6rem 0 0 0' }} >\n                        <h1>Hello there</h1>\n                        <p>\n                            I am an Interaction Designer at Huawei’s R&D Human Machine Interaction lab. I research and design how digital and physical products interact with humans by implementing user interfaces, haptics, voice, text, and gesture solutions.\n                            Previously, I worked at the Royal Bank of Canada and Nokia. On the side, I am the President of the OCADU Undergraduate Technology Research Association and Co-Founder of the UX Student Association.\n                            I am reading Speculative Everything by Anthony Dunne and Fiona Raby.\n                        </p>\n                        <p>\n                            I am open to virtual or in-person chats over coffee. Feel free to reach out via LinkedIn or Email.\n                        </p>\n                    </Col>\n                    <Col md={8} className=\"d-flex justify-content-end align-items-end\" >\n                        <svg ref={svgRef} style={{ width: '100%', height: '100%', maxHeight: 'calc(100vh )' }}></svg>\n                    </Col>\n                </Row>\n            </Container> */}\n        </div>\n    );\n}\n\nexport default About;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,KAAKA,CAAA,EAAG;EACboBACID,OAAA;IAAKE,SAAS,EAAC;EAAY;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAmBtB,CAAC;AAEd;AAACC,EAAA,GA3LQN,KAAK;AA6Ld,eAAeA,KAAK;AAAC,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}