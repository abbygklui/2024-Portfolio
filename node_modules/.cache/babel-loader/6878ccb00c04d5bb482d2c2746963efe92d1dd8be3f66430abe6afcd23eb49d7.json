{"ast":null,"code":"var _jsxFileName = \"/Users/abbylui/Documents/GitHub/aboutme/Portfolio/src/components/Home.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport * as THREE from 'three';\nimport { FontLoader } from 'three/examples/jsm/loaders/FontLoader';\nimport { TextureLoader } from 'three';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  useEffect(() => {\n    const preload = () => {\n      let manager = new THREE.LoadingManager();\n      manager.onLoad = function () {\n        const environment = new Environment(typo, particle);\n      };\n      let typo = null;\n      const loader = new FontLoader(manager);\n      loader.load('https://res.cloudinary.com/dydre7amr/raw/upload/v1612950355/font_zsd4dr.json', function (font) {\n        typo = font;\n      });\n      const particle = new TextureLoader(manager).load('https://res.cloudinary.com/dfvtkoboz/image/upload/v1605013866/particle_a64uzf.png');\n    };\n    if (document.readyState === 'complete' || document.readyState !== 'loading' && !document.documentElement.doScroll) {\n      preload();\n    } else {\n      document.addEventListener('DOMContentLoaded', preload);\n    }\n    class Environment {\n      constructor(font, particle) {\n        this.font = font;\n        this.particle = particle;\n        this.container = document.querySelector('#magic');\n        this.scene = new THREE.Scene();\n        this.createCamera();\n        this.createRenderer();\n        this.setup();\n        this.bindEvents();\n      }\n      bindEvents() {\n        window.addEventListener('resize', this.onWindowResize.bind(this));\n      }\n      setup() {\n        this.createParticles = new CreateParticles(this.scene, this.font, this.particle, this.camera, this.renderer);\n      }\n      render() {\n        this.createParticles.render();\n        this.renderer.render(this.scene, this.camera);\n      }\n      createCamera() {\n        this.camera = new THREE.PerspectiveCamera(65, this.container.clientWidth / this.container.clientHeight, 1, 10000);\n        this.camera.position.set(0, 0, 100);\n      }\n      createRenderer() {\n        this.renderer = new THREE.WebGLRenderer();\n        this.renderer.setSize(this.container.clientWidth, this.container.clientHeight);\n        this.renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\n        // this.renderer.outputEncoding = THREE.LinearEncoding;\n        this.container.appendChild(this.renderer.domElement);\n        this.renderer.setAnimationLoop(() => {\n          this.render();\n        });\n      }\n      onWindowResize() {\n        this.camera.aspect = this.container.clientWidth / this.container.clientHeight;\n        this.camera.updateProjectionMatrix();\n        this.renderer.setSize(this.container.clientWidth, this.container.clientHeight);\n      }\n    }\n    class CreateParticles {\n      constructor(scene, font, particleImg, camera, renderer) {\n        this.scene = scene;\n        this.font = font;\n        this.particleImg = particleImg;\n        this.camera = camera;\n        this.renderer = renderer;\n        this.raycaster = new THREE.Raycaster();\n        this.mouse = new THREE.Vector2(-200, 200);\n        this.colorChange = new THREE.Color();\n        this.buttom = false;\n        this.data = {\n          text: 'FUTURE\\nIS NOW',\n          amount: 1500,\n          particleSize: 1,\n          particleColor: 0xffffff,\n          textSize: 16,\n          area: 250,\n          ease: 0.05\n        };\n        this.setup();\n        this.bindEvents();\n      }\n      setup() {\n        this.createText(); // Call createText directly to see the basic text first\n      }\n      createText() {\n        if (!this.font) {\n          console.error(\"Font not loaded\");\n          return;\n        }\n        const textGeometry = new THREE.TextGeometry(this.data.text, {\n          font: this.font,\n          size: 10,\n          // Adjust size to ensure visibility\n          height: 1,\n          curveSegments: 12\n        });\n        const textMaterial = new THREE.MeshBasicMaterial({\n          color: 0xffffff\n        });\n        const textMesh = new THREE.Mesh(textGeometry, textMaterial);\n        textGeometry.computeBoundingBox();\n        const xMid = -0.5 * (textGeometry.boundingBox.max.x - textGeometry.boundingBox.min.x);\n        const yMid = (textGeometry.boundingBox.max.y - textGeometry.boundingBox.min.y) / 2;\n        textMesh.position.set(xMid, yMid, 0); // Center text on screen\n        this.scene.add(textMesh); // Add text to scene\n      }\n      bindEvents() {\n        document.addEventListener('mousedown', event => this.onMouseDown(event));\n        document.addEventListener('mousemove', event => this.onMouseMove(event));\n        document.addEventListener('mouseup', event => this.onMouseUp(event));\n      }\n      onMouseDown(event) {\n        // Mouse down logic here\n      }\n      onMouseMove(event) {\n        // Mouse move logic here\n      }\n      onMouseUp() {\n        // Mouse up logic here\n      }\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"magic\",\n    style: {\n      width: '100%',\n      height: '100vh',\n      position: 'fixed',\n      top: 0,\n      left: 0\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 9\n  }, this);\n};\n_s(Home, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","THREE","FontLoader","TextureLoader","jsxDEV","_jsxDEV","Home","_s","preload","manager","LoadingManager","onLoad","environment","Environment","typo","particle","loader","load","font","document","readyState","documentElement","doScroll","addEventListener","constructor","container","querySelector","scene","Scene","createCamera","createRenderer","setup","bindEvents","window","onWindowResize","bind","createParticles","CreateParticles","camera","renderer","render","PerspectiveCamera","clientWidth","clientHeight","position","set","WebGLRenderer","setSize","setPixelRatio","Math","min","devicePixelRatio","appendChild","domElement","setAnimationLoop","aspect","updateProjectionMatrix","particleImg","raycaster","Raycaster","mouse","Vector2","colorChange","Color","buttom","data","text","amount","particleSize","particleColor","textSize","area","ease","createText","console","error","textGeometry","TextGeometry","size","height","curveSegments","textMaterial","MeshBasicMaterial","color","textMesh","Mesh","computeBoundingBox","xMid","boundingBox","max","x","yMid","y","add","event","onMouseDown","onMouseMove","onMouseUp","id","style","width","top","left","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/abbylui/Documents/GitHub/aboutme/Portfolio/src/components/Home.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport * as THREE from 'three';\nimport { FontLoader } from 'three/examples/jsm/loaders/FontLoader';\nimport { TextureLoader } from 'three';\n\nconst Home = () => {\n    useEffect(() => {\n        const preload = () => {\n            let manager = new THREE.LoadingManager();\n            manager.onLoad = function () {\n                const environment = new Environment(typo, particle);\n            };\n\n            let typo = null;\n            const loader = new FontLoader(manager);\n            loader.load('https://res.cloudinary.com/dydre7amr/raw/upload/v1612950355/font_zsd4dr.json', function (font) {\n                typo = font;\n            });\n\n            const particle = new TextureLoader(manager).load(\n                'https://res.cloudinary.com/dfvtkoboz/image/upload/v1605013866/particle_a64uzf.png'\n            );\n        };\n\n        if (document.readyState === 'complete' || (document.readyState !== 'loading' && !document.documentElement.doScroll)) {\n            preload();\n        } else {\n            document.addEventListener('DOMContentLoaded', preload);\n        }\n\n        class Environment {\n            constructor(font, particle) {\n                this.font = font;\n                this.particle = particle;\n                this.container = document.querySelector('#magic');\n                this.scene = new THREE.Scene();\n                this.createCamera();\n                this.createRenderer();\n                this.setup();\n                this.bindEvents();\n            }\n\n            bindEvents() {\n                window.addEventListener('resize', this.onWindowResize.bind(this));\n            }\n\n            setup() {\n                this.createParticles = new CreateParticles(this.scene, this.font, this.particle, this.camera, this.renderer);\n            }\n\n            render() {\n                this.createParticles.render();\n                this.renderer.render(this.scene, this.camera);\n            }\n\n            createCamera() {\n                this.camera = new THREE.PerspectiveCamera(\n                    65,\n                    this.container.clientWidth / this.container.clientHeight,\n                    1,\n                    10000\n                );\n                this.camera.position.set(0, 0, 100);\n            }\n\n            createRenderer() {\n                this.renderer = new THREE.WebGLRenderer();\n                this.renderer.setSize(this.container.clientWidth, this.container.clientHeight);\n                this.renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\n                // this.renderer.outputEncoding = THREE.LinearEncoding;\n                this.container.appendChild(this.renderer.domElement);\n                this.renderer.setAnimationLoop(() => {\n                    this.render();\n                });\n            }\n\n            onWindowResize() {\n                this.camera.aspect = this.container.clientWidth / this.container.clientHeight;\n                this.camera.updateProjectionMatrix();\n                this.renderer.setSize(this.container.clientWidth, this.container.clientHeight);\n            }\n        }\n\n        class CreateParticles {\n            constructor(scene, font, particleImg, camera, renderer) {\n                this.scene = scene;\n                this.font = font;\n                this.particleImg = particleImg;\n                this.camera = camera;\n                this.renderer = renderer;\n\n                this.raycaster = new THREE.Raycaster();\n                this.mouse = new THREE.Vector2(-200, 200);\n\n                this.colorChange = new THREE.Color();\n                this.buttom = false;\n\n                this.data = {\n                    text: 'FUTURE\\nIS NOW',\n                    amount: 1500,\n                    particleSize: 1,\n                    particleColor: 0xffffff,\n                    textSize: 16,\n                    area: 250,\n                    ease: 0.05,\n                };\n\n                this.setup();\n                this.bindEvents();\n            }\n\n            setup() {\n                this.createText(); // Call createText directly to see the basic text first\n            }\n\n            createText() {\n                if (!this.font) {\n                    console.error(\"Font not loaded\");\n                    return;\n                }\n\n                const textGeometry = new THREE.TextGeometry(this.data.text, {\n                    font: this.font,\n                    size: 10,  // Adjust size to ensure visibility\n                    height: 1,\n                    curveSegments: 12,\n                });\n\n                const textMaterial = new THREE.MeshBasicMaterial({ color: 0xffffff });\n                const textMesh = new THREE.Mesh(textGeometry, textMaterial);\n\n                textGeometry.computeBoundingBox();\n                const xMid = -0.5 * (textGeometry.boundingBox.max.x - textGeometry.boundingBox.min.x);\n                const yMid = (textGeometry.boundingBox.max.y - textGeometry.boundingBox.min.y) / 2;\n\n                textMesh.position.set(xMid, yMid, 0); // Center text on screen\n                this.scene.add(textMesh); // Add text to scene\n            }\n\n            bindEvents() {\n                document.addEventListener('mousedown', (event) => this.onMouseDown(event));\n                document.addEventListener('mousemove', (event) => this.onMouseMove(event));\n                document.addEventListener('mouseup', (event) => this.onMouseUp(event));\n            }\n\n            onMouseDown(event) {\n                // Mouse down logic here\n            }\n\n            onMouseMove(event) {\n                // Mouse move logic here\n            }\n\n            onMouseUp() {\n                // Mouse up logic here\n            }\n        }\n\n    }, []);\n\n    return (\n        <div id=\"magic\" style={{ width: '100%', height: '100vh', position: 'fixed', top: 0, left: 0 }}></div>\n    );\n};\n\nexport default Home;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}