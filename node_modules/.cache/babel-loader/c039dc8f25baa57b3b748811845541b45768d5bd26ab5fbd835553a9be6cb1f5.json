{"ast":null,"code":"var _jsxFileName = \"/Users/abbylui/Documents/GitHub/aboutme/Portfolio/src/components/Home.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport { FontLoader } from 'three/examples/jsm/loaders/FontLoader.js';\nimport { TextGeometry } from 'three/examples/jsm/geometries/TextGeometry.js';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport './Home.css'; // Ensure you have this CSS file for custom styles\nimport image1 from '../assets/img1.png';\nimport image2 from '../assets/img2.png';\nimport image3 from '../assets/img3.png';\nimport image4 from '../assets/img4.png';\nimport image5 from '../assets/img5.png';\nimport image6 from '../assets/img6.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const mountRef = useRef(null);\n  useEffect(() => {\n    const vertexShader = `\n        uniform vec3 lightPosition;\n        varying float vDist;\n\n        void main() {\n            vec3 transformedPosition = (modelViewMatrix * vec4(position, 1.0)).xyz;\n\n            float dist = distance(lightPosition, transformedPosition);\n            vDist = dist;\n\n            gl_Position = projectionMatrix * vec4(transformedPosition, 1.0);\n        }\n        `;\n    const fragmentShader = `\n        varying float vDist;\n        uniform vec3 lightColor;\n        uniform vec2 lightPosition;\n        uniform vec2 u_resolution;\n\n        float getLightRayEffect(vec2 uv, vec2 lightPos) {\n            vec2 dir = uv - lightPos;\n            float dist = length(dir);\n            dir /= dist;\n\n            float ray = 1.0 / (dist * dist + 0.1);\n            ray = ray * 0.05;\n            ray *= sin(dist * 10.0);\n\n            return ray;\n        }\n\n        void main() {\n            vec2 uv = gl_FragCoord.xy / u_resolution;\n\n            float intensity = 1.0 / (vDist * vDist + 0.1);\n            intensity = clamp(intensity, 0.0, 1.0);\n\n            float rays = getLightRayEffect(uv, lightPosition / u_resolution);\n            intensity += rays;\n\n            vec3 color = lightColor * intensity;\n\n            gl_FragColor = vec4(color, 1.0);\n        }\n        `;\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    if (mountRef.current) {\n      mountRef.current.appendChild(renderer.domElement);\n    }\n    const pointLight = new THREE.PointLight(0xffffff, 2, 100);\n    scene.add(pointLight);\n    const uniforms = {\n      lightPosition: {\n        value: new THREE.Vector2(0, 0)\n      },\n      lightColor: {\n        value: new THREE.Color(0xffffff)\n      },\n      u_resolution: {\n        value: new THREE.Vector2(window.innerWidth, window.innerHeight)\n      }\n    };\n    const loader = new FontLoader();\n    loader.load('https://threejs.org/examples/fonts/helvetiker_regular.typeface.json', font => {\n      const textGeometry = new TextGeometry('Human-computer Interaction Explorer of digital-physical experiences', {\n        font: font,\n        size: 0.2,\n        height: 0.0,\n        curveSegments: 12,\n        bevelEnabled: false\n      });\n      textGeometry.computeBoundingBox();\n      const textWidth = textGeometry.boundingBox.max.x - textGeometry.boundingBox.min.x;\n      const xPosition = -textWidth / 2;\n      const textMaterial = new THREE.ShaderMaterial({\n        vertexShader: vertexShader,\n        fragmentShader: fragmentShader,\n        uniforms: uniforms\n      });\n      const textMesh = new THREE.Mesh(textGeometry, textMaterial);\n      textMesh.position.set(xPosition, 2.5, 0);\n      scene.add(textMesh);\n    });\n    camera.position.z = 5;\n    const handleResize = () => {\n      const width = window.innerWidth;\n      const height = window.innerHeight;\n      renderer.setPixelRatio(window.devicePixelRatio / 2);\n      renderer.setSize(width, height);\n      camera.aspect = width / height;\n      camera.updateProjectionMatrix();\n      uniforms.u_resolution.value.set(width, height);\n    };\n    window.addEventListener('resize', handleResize);\n    let mouseX = 0;\n    let mouseY = 0;\n    const onMouseMove = event => {\n      mouseX = event.clientX / window.innerWidth * 2 - 1;\n      mouseY = -(event.clientY / window.innerHeight) * 2 + 1;\n      const vector = new THREE.Vector3(mouseX, mouseY, 0.5);\n      vector.unproject(camera);\n      const dir = vector.sub(camera.position).normalize();\n      const distance = -camera.position.z / dir.z;\n      const pos = camera.position.clone().add(dir.multiplyScalar(distance));\n      pos.z += 1;\n      pointLight.position.copy(pos);\n      uniforms.lightPosition.value.set(event.clientX, window.innerHeight - event.clientY);\n    };\n    document.addEventListener('mousemove', onMouseMove);\n    function animate() {\n      requestAnimationFrame(animate);\n      renderer.render(scene, camera);\n    }\n    animate();\n    return () => {\n      document.removeEventListener('mousemove', onMouseMove);\n      window.removeEventListener('resize', handleResize);\n      if (mountRef.current) {\n        mountRef.current.removeChild(renderer.domElement);\n      }\n      renderer.dispose();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mountRef,\n    className: \"three-js-container\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 12\n  }, this);\n}\n_s(Home, \"V9/qkEdV8GfsDZk7lMTA1T8g5Ps=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useRef","THREE","FontLoader","TextGeometry","Container","Row","Col","Link","image1","image2","image3","image4","image5","image6","jsxDEV","_jsxDEV","Home","_s","mountRef","vertexShader","fragmentShader","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","renderer","WebGLRenderer","antialias","setSize","current","appendChild","domElement","pointLight","PointLight","add","uniforms","lightPosition","value","Vector2","lightColor","Color","u_resolution","loader","load","font","textGeometry","size","height","curveSegments","bevelEnabled","computeBoundingBox","textWidth","boundingBox","max","x","min","xPosition","textMaterial","ShaderMaterial","textMesh","Mesh","position","set","z","handleResize","width","setPixelRatio","devicePixelRatio","aspect","updateProjectionMatrix","addEventListener","mouseX","mouseY","onMouseMove","event","clientX","clientY","vector","Vector3","unproject","dir","sub","normalize","distance","pos","clone","multiplyScalar","copy","document","animate","requestAnimationFrame","render","removeEventListener","removeChild","dispose","ref","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/abbylui/Documents/GitHub/aboutme/Portfolio/src/components/Home.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport { FontLoader } from 'three/examples/jsm/loaders/FontLoader.js';\nimport { TextGeometry } from 'three/examples/jsm/geometries/TextGeometry.js';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport './Home.css'; // Ensure you have this CSS file for custom styles\nimport image1 from '../assets/img1.png';\nimport image2 from '../assets/img2.png';\nimport image3 from '../assets/img3.png';\nimport image4 from '../assets/img4.png';\nimport image5 from '../assets/img5.png';\nimport image6 from '../assets/img6.png';\n\nfunction Home() {\n    const mountRef = useRef(null);\n\n    useEffect(() => {\n        const vertexShader = `\n        uniform vec3 lightPosition;\n        varying float vDist;\n\n        void main() {\n            vec3 transformedPosition = (modelViewMatrix * vec4(position, 1.0)).xyz;\n\n            float dist = distance(lightPosition, transformedPosition);\n            vDist = dist;\n\n            gl_Position = projectionMatrix * vec4(transformedPosition, 1.0);\n        }\n        `;\n\n        const fragmentShader = `\n        varying float vDist;\n        uniform vec3 lightColor;\n        uniform vec2 lightPosition;\n        uniform vec2 u_resolution;\n\n        float getLightRayEffect(vec2 uv, vec2 lightPos) {\n            vec2 dir = uv - lightPos;\n            float dist = length(dir);\n            dir /= dist;\n\n            float ray = 1.0 / (dist * dist + 0.1);\n            ray = ray * 0.05;\n            ray *= sin(dist * 10.0);\n\n            return ray;\n        }\n\n        void main() {\n            vec2 uv = gl_FragCoord.xy / u_resolution;\n\n            float intensity = 1.0 / (vDist * vDist + 0.1);\n            intensity = clamp(intensity, 0.0, 1.0);\n\n            float rays = getLightRayEffect(uv, lightPosition / u_resolution);\n            intensity += rays;\n\n            vec3 color = lightColor * intensity;\n\n            gl_FragColor = vec4(color, 1.0);\n        }\n        `;\n\n        const scene = new THREE.Scene();\n        const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n        const renderer = new THREE.WebGLRenderer({ antialias: true });\n\n        renderer.setSize(window.innerWidth, window.innerHeight);\n        if (mountRef.current) {\n            mountRef.current.appendChild(renderer.domElement);\n        }\n\n        const pointLight = new THREE.PointLight(0xffffff, 2, 100);\n        scene.add(pointLight);\n\n        const uniforms = {\n            lightPosition: { value: new THREE.Vector2(0, 0) },\n            lightColor: { value: new THREE.Color(0xffffff) },\n            u_resolution: { value: new THREE.Vector2(window.innerWidth, window.innerHeight) },\n        };\n\n        const loader = new FontLoader();\n        loader.load(\n            'https://threejs.org/examples/fonts/helvetiker_regular.typeface.json',\n            (font) => {\n                const textGeometry = new TextGeometry(\n                    'Human-computer Interaction Explorer of digital-physical experiences',\n                    {\n                        font: font,\n                        size: 0.2,\n                        height: 0.0,\n                        curveSegments: 12,\n                        bevelEnabled: false,\n                    }\n                );\n\n                textGeometry.computeBoundingBox();\n                const textWidth = textGeometry.boundingBox.max.x - textGeometry.boundingBox.min.x;\n                const xPosition = -textWidth / 2;\n\n                const textMaterial = new THREE.ShaderMaterial({\n                    vertexShader: vertexShader,\n                    fragmentShader: fragmentShader,\n                    uniforms: uniforms,\n                });\n\n                const textMesh = new THREE.Mesh(textGeometry, textMaterial);\n                textMesh.position.set(xPosition, 2.5, 0);\n                scene.add(textMesh);\n            }\n        );\n\n        camera.position.z = 5;\n\n        const handleResize = () => {\n            const width = window.innerWidth;\n            const height = window.innerHeight;\n            renderer.setPixelRatio(window.devicePixelRatio / 2);\n            renderer.setSize(width, height);\n            camera.aspect = width / height;\n            camera.updateProjectionMatrix();\n\n            uniforms.u_resolution.value.set(width, height);\n        };\n        window.addEventListener('resize', handleResize);\n\n        let mouseX = 0;\n        let mouseY = 0;\n\n        const onMouseMove = (event) => {\n            mouseX = (event.clientX / window.innerWidth) * 2 - 1;\n            mouseY = -(event.clientY / window.innerHeight) * 2 + 1;\n\n            const vector = new THREE.Vector3(mouseX, mouseY, 0.5);\n            vector.unproject(camera);\n            const dir = vector.sub(camera.position).normalize();\n            const distance = -camera.position.z / dir.z;\n\n            const pos = camera.position.clone().add(dir.multiplyScalar(distance));\n            pos.z += 1;\n            pointLight.position.copy(pos);\n\n            uniforms.lightPosition.value.set(event.clientX, window.innerHeight - event.clientY);\n        };\n\n        document.addEventListener('mousemove', onMouseMove);\n\n        function animate() {\n            requestAnimationFrame(animate);\n            renderer.render(scene, camera);\n        }\n\n        animate();\n\n        return () => {\n            document.removeEventListener('mousemove', onMouseMove);\n            window.removeEventListener('resize', handleResize);\n            if (mountRef.current) {\n                mountRef.current.removeChild(renderer.domElement);\n            }\n            renderer.dispose();\n        };\n    }, []);\n\n    return <div ref={mountRef} className=\"three-js-container\" />;\n}\n\nexport default Home;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}