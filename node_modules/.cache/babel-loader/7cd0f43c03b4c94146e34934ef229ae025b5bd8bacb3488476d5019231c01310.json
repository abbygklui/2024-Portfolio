{"ast":null,"code":"var _jsxFileName = \"/Users/abbylui/Documents/GitHub/aboutme/Portfolio/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ParticleText = () => {\n  _s();\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n\n    // Set the canvas width and height to match the window\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n\n    // Fill the background with black to ensure the canvas is visible\n    ctx.fillStyle = 'black';\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n    // Draw a simple rectangle as a test\n    ctx.fillStyle = 'white';\n    ctx.fillRect(50, 50, 200, 200);\n\n    // Draw a test text\n    ctx.font = '48px sans-serif';\n    ctx.fillStyle = 'red';\n    ctx.fillText('Hello Canvas', 100, 100);\n  }, []); // Empty dependency array to run the effect only once\n\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 10\n  }, this);\n};\n_s(ParticleText, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = ParticleText;\nexport default ParticleText;\nvar _c;\n$RefreshReg$(_c, \"ParticleText\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","ParticleText","_s","canvasRef","canvas","current","ctx","getContext","width","window","innerWidth","height","innerHeight","fillStyle","fillRect","font","fillText","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/abbylui/Documents/GitHub/aboutme/Portfolio/src/App.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport './App.css';\n\nconst ParticleText = () => {\n  const canvasRef = useRef(null);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n\n    // Set the canvas width and height to match the window\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n\n    // Fill the background with black to ensure the canvas is visible\n    ctx.fillStyle = 'black';\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n    // Draw a simple rectangle as a test\n    ctx.fillStyle = 'white';\n    ctx.fillRect(50, 50, 200, 200);\n\n    // Draw a test text\n    ctx.font = '48px sans-serif';\n    ctx.fillStyle = 'red';\n    ctx.fillText('Hello Canvas', 100, 100);\n\n  }, []); // Empty dependency array to run the effect only once\n\n  return <canvas ref={canvasRef} />;\n};\n\nexport default ParticleText;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAMC,SAAS,GAAGL,MAAM,CAAC,IAAI,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACd,MAAMO,MAAM,GAAGD,SAAS,CAACE,OAAO;IAChC,MAAMC,GAAG,GAAGF,MAAM,CAACG,UAAU,CAAC,IAAI,CAAC;;IAEnC;IACAH,MAAM,CAACI,KAAK,GAAGC,MAAM,CAACC,UAAU;IAChCN,MAAM,CAACO,MAAM,GAAGF,MAAM,CAACG,WAAW;;IAElC;IACAN,GAAG,CAACO,SAAS,GAAG,OAAO;IACvBP,GAAG,CAACQ,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAEV,MAAM,CAACI,KAAK,EAAEJ,MAAM,CAACO,MAAM,CAAC;;IAE/C;IACAL,GAAG,CAACO,SAAS,GAAG,OAAO;IACvBP,GAAG,CAACQ,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;;IAE9B;IACAR,GAAG,CAACS,IAAI,GAAG,iBAAiB;IAC5BT,GAAG,CAACO,SAAS,GAAG,KAAK;IACrBP,GAAG,CAACU,QAAQ,CAAC,cAAc,EAAE,GAAG,EAAE,GAAG,CAAC;EAExC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBAAOhB,OAAA;IAAQiB,GAAG,EAAEd;EAAU;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACnC,CAAC;AAACnB,EAAA,CA3BID,YAAY;AAAAqB,EAAA,GAAZrB,YAAY;AA6BlB,eAAeA,YAAY;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}